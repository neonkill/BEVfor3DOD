

_target_: model_module.model.fullmodel.FullModel


reduce_dim: 64
outputs:
  bev: [0, 1]


backbone:
  _target_: model_module.model.backbones.agg16_16toGAP.Backbone
  
  efficientnet:
    _target_: model_module.model.backbones.efficientnet.EfficientNetExtractor

    layer_names: ['reduction_4', 'reduction_5']
    image_height: ${data.image.h}
    image_width: ${data.image.w}
    model_name: 'efficientnet-b4'

  chs: [160, 448, 448, 448]
  extra_layers: ['reduction_6', 'GAP']
  reduce_dim: ${model.reduce_dim}


q_generator:
  _target_: model_module.model.segmentation.matching.Matching

  bev_embedding: 
    bev_height: ${data.bev.h}
    bev_width: ${data.bev.w}
    h_meters: ${data.bev.h_meters}
    w_meters: ${data.bev.w_meters}
    offset: ${data.bev.offset}
    resolution: 8         
    # generated bev feature's resolution. 
    # If you want to get 25x25 from cross_attn, resolution must be set 8

  b_res: 16               # kv's resolution. 
  image_height: ${data.image.h}
  image_width: ${data.image.w}
  dim: ${model.reduce_dim}
  heads: 4

  cross_attn:
    _target_: model_module.model.segmentation.matching.CrossAttention

    dim: ${model.reduce_dim}
    heads: ${model.q_generator.heads}
    qkv_bias: True